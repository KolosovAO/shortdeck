{"version":3,"sources":["math/combination.ts","blocks/card.tsx","blocks/card_list.tsx","blocks/empty_card.tsx","blocks/cards.tsx","blocks/hand.tsx","blocks/spectre.tsx","math/enumerateAllBoards.ts","math/combos.ts","math/computeEquity.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Combination","Card","card","onClick","disabled","className","undefined","ALL_CARDS","reduce","acc","suite","split","reverse","forEach","push","CardList","selectCard","selected","map","i","key","includes","EmptyCard","Cards","cards","Hand","hand","select","extra","length","CARD","CARDS_ROW","c1","i1","c2","i2","Spectre","selectHands","currentHands","useState","setCards","filter","concat","row","j","getStraightHead","values","last","count","value","mapping","A","K","Q","J","T","9","8","7","6","getKickers","kickers","exclude","createCard","str","suit","computeCombination","board","sort","a","b","s","c","d","h","flush_cards","Object","suite_values","straight_head","combination","ROYAL_FLUSH","kicker","STRAIGHT_FLUSH","sets","pairs","Number","FOUR_OF_A_KIND","FLUSH","slice","FULL_HOUSE","STRAIGHT","THREE_OF_A_KIND","best_pairs","TWO_PAIRS","ONE_PAIR","HIGH_HAND","SUITES","OFFSUITED","res","s1","s2","PAIR_SUITES","computeEquity","hand1","hand2","current_board","win","tie","lose","dead_cards","available_cards","progress","result","next_card","pop","enumerateAllBoards","combination1","combination2","compareHands","total","computeEquityVsSpectre","spectre","hands","w","l","t","compact","val","App","show_cardlist","setShowCardList","show_p2_spectre","setShowP2Spectre","is_p2_spectre","setIsP2Spectre","p2_spectre","setP2Spectre","setBoard","p1","setP1","p2","setP2","p1_info","setP1Info","p2_info","setP2Info","current_setter","useRef","current_cards","current_index","cards_lost","p1_full","p2_full","Boolean","index","new_p1","current","join","new_p2","new_board","String","toFixed","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a65e8945.chunk.js","sourcesContent":["type Suit = 'c' | 's' | 'd' | 'h';\r\ntype CardValue = 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14;\r\ntype Card = { value: CardValue; suit: Suit; };\r\n\r\nenum Combination {\r\n    ROYAL_FLUSH,\r\n    STRAIGHT_FLUSH,\r\n    FOUR_OF_A_KIND,\r\n    FLUSH,\r\n    FULL_HOUSE,\r\n    STRAIGHT,\r\n    THREE_OF_A_KIND,\r\n    TWO_PAIRS,\r\n    ONE_PAIR,\r\n    HIGH_HAND,\r\n};\r\n\r\ntype FullCombination = {\r\n    combination: Combination;\r\n    kicker: CardValue[];\r\n}\r\n\r\nconst getStraightHead = (values: CardValue[]): CardValue | undefined => {\r\n    if (values[0] === 14) {\r\n        values = [...values, 5 as CardValue];\r\n    }\r\n    let last = 0;\r\n    let count = 1;\r\n    for (const value of values) {\r\n        if (last - 1 === value) {\r\n            count++;\r\n            if (count === 5) {\r\n                return value + 4 as CardValue;\r\n            }\r\n        } else if (last !== value) {\r\n            count = 1;\r\n        }\r\n        last = value;\r\n    }\r\n}\r\n\r\nconst mapping: Record<string, CardValue> = {\r\n    A: 14,\r\n    K: 13,\r\n    Q: 12,\r\n    J: 11,\r\n    T: 10,\r\n    9: 9,\r\n    8: 8,\r\n    7: 7,\r\n    6: 6,\r\n};\r\n\r\nconst getKickers = (kickers: CardValue[], exclude: CardValue[]): CardValue[] => {\r\n    return kickers.filter((value) => !exclude.includes(value));\r\n}\r\n\r\nconst createCard = (str: string): Card => ({ value: mapping[str[0]], suit: str[1] as Suit });\r\n\r\nconst computeCombination = (hand: string[], board: string[]): FullCombination => {\r\n    const cards = [\r\n        ...board.map(createCard),\r\n        ...hand.map(createCard)\r\n    ].sort((a, b) => b.value - a.value);\r\n    const kickers = cards.map((card) => card.value);\r\n    const suite: Record<Suit, CardValue[]> = { s: [], c: [], d: [], h: [] };\r\n    const values: Partial<Record<CardValue, number>> = {};\r\n\r\n    for (const { suit, value } of cards) {\r\n        suite[suit].push(value);\r\n        values[value] = (values[value] || 0) + 1;\r\n    }\r\n\r\n    let flush_cards: CardValue[] | undefined = undefined;\r\n    for (const suite_values of Object.values(suite)) {\r\n        if (suite_values.length > 4) {\r\n            flush_cards = suite_values;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (flush_cards) {\r\n        const straight_head = getStraightHead(flush_cards);\r\n        if (straight_head) {\r\n            if (straight_head === 14) {\r\n                return {\r\n                    combination: Combination.ROYAL_FLUSH,\r\n                    kicker: [],\r\n                };\r\n            }\r\n            return {\r\n                combination: Combination.STRAIGHT_FLUSH,\r\n                kicker: [straight_head],\r\n            };\r\n        }\r\n    }\r\n\r\n    const sets: CardValue[] = [];\r\n    const pairs: CardValue[] = [];\r\n\r\n    for (const key in values) {\r\n        const value = Number(key) as CardValue;\r\n        const count = values[value];\r\n        if (count === 4) {\r\n            return {\r\n                combination: Combination.FOUR_OF_A_KIND,\r\n                kicker: [value, getKickers(kickers, [value])[0]],\r\n            }\r\n        }\r\n        if (count === 3) {\r\n            sets.push(value);\r\n        }\r\n        if (count === 2) {\r\n            pairs.push(value);\r\n        }\r\n    }\r\n\r\n    if (flush_cards) {\r\n        return {\r\n            combination: Combination.FLUSH,\r\n            kicker: flush_cards.slice(-5),\r\n        };\r\n    }\r\n\r\n    if (sets.length === 2) {\r\n        return {\r\n            combination: Combination.FULL_HOUSE,\r\n            kicker: [sets[1], sets[0]],\r\n        };\r\n    }\r\n\r\n    if (sets.length && pairs.length) {\r\n        return {\r\n            combination: Combination.FULL_HOUSE,\r\n            kicker: [sets[0], pairs[pairs.length - 1]],\r\n        };\r\n    }\r\n\r\n    const straight_head = getStraightHead(kickers);\r\n    if (straight_head) {\r\n        return {\r\n            combination: Combination.STRAIGHT,\r\n            kicker: [straight_head],\r\n        };\r\n    }\r\n\r\n    if (sets.length) {\r\n        return {\r\n            combination: Combination.THREE_OF_A_KIND,\r\n            kicker: [sets[0], ...getKickers(kickers, sets).slice(0, 2)],\r\n        };\r\n    }\r\n\r\n    if (pairs.length > 1) {\r\n        const best_pairs = pairs.slice(-2);\r\n        return {\r\n            combination: Combination.TWO_PAIRS,\r\n            kicker: [best_pairs[1], best_pairs[0], getKickers(kickers, best_pairs)[0]],\r\n        };\r\n    }\r\n\r\n    if (pairs.length === 1) {\r\n        return {\r\n            combination: Combination.ONE_PAIR,\r\n            kicker: [pairs[0], ...getKickers(kickers, pairs).slice(0, 4)],\r\n        };\r\n    }\r\n\r\n    return {\r\n        combination: Combination.HIGH_HAND,\r\n        kicker: kickers.slice(0, 5),\r\n    };\r\n}\r\n\r\nexport const compareHands = (hand1: string[], hand2: string[], board: string[]): 0 | 1 | 2 => {\r\n    const combination1 = computeCombination(hand1, board);\r\n    const combination2 = computeCombination(hand2, board);\r\n\r\n    if (combination1.combination === combination2.combination) {\r\n        for (let i = 0; i < combination1.kicker.length; i++) {\r\n            if (combination1.kicker[i] > combination2.kicker[i]) {\r\n                return 1;\r\n            } else if (combination1.kicker[i] < combination2.kicker[i]) {\r\n                return 2;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    return combination1.combination < combination2.combination ? 1 : 2;\r\n}","import React from 'react';\r\n\r\ntype Props = {\r\n    card: string;\r\n    disabled?: boolean;\r\n    onClick: () => void;\r\n};\r\n\r\nexport const Card: React.FC<Props> = ({ card, onClick, disabled }) => {\r\n    let className = \"card card__suite-\" + card[1];\r\n    if (disabled) {\r\n        className += \" card__disabled\";\r\n    }\r\n    return (\r\n        <div className={className} onClick={disabled ? undefined : onClick}>\r\n            {card}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Card } from './card';\r\n\r\ntype Props = {\r\n    selected: string[];\r\n    selectCard: (card: string) => void;\r\n};\r\n\r\nconst ALL_CARDS = ['c', 's', 'h', 'd'].reduce<string[]>((acc, suite) => {\r\n    '6789TJQKA'.split('').reverse().forEach((card) => {\r\n        acc.push(card + suite);\r\n    });\r\n    return acc;\r\n}, []);\r\n\r\nexport const CardList: React.FC<Props> = ({ selectCard, selected }) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                ALL_CARDS.map((card, i) =>\r\n                    <Card key={i} card={card} onClick={() => selectCard(card)} disabled={selected.includes(card)} />\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n    onClick: () => void;\r\n};\r\n\r\nexport const EmptyCard: React.FC<Props> = ({ onClick }) => {\r\n    return (\r\n        <div className=\"card card__empty\" onClick={onClick}>\r\n            #\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Card } from './card';\r\nimport { EmptyCard } from './empty_card';\r\n\r\ntype Props = {\r\n    className: string;\r\n    cards: Array<string | undefined>;\r\n    selectCard: (index: number) => void;\r\n};\r\n\r\nexport const Cards: React.FC<Props> = ({ cards, selectCard, className }) => {\r\n    return (\r\n        <div className={className}>\r\n            {\r\n                cards.map((card, i) => card\r\n                    ? <Card key={i} card={card} onClick={() => selectCard(i)} />\r\n                    : <EmptyCard key={i} onClick={() => selectCard(i)} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n    hand: string;\r\n    select: (hand: string) => void;\r\n    selected: boolean;\r\n}\r\n\r\nexport const Hand: React.FC<Props> = ({ hand, select, selected }) => {\r\n    const extra = hand.length === 2\r\n        ? 'hand__pair'\r\n        : hand[2] === 's'\r\n            ? 'hand__suited'\r\n            : 'hand__offsuite';\r\n    return (\r\n        <div onClick={() => select(hand)} className={`hand ${extra}${selected ? \" hand__selected\" : \"\"}`}>\r\n            {hand}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Hand } from './hand';\r\n\r\nconst CARD = ['A', 'K', 'Q', 'J', 'T', '9', '8', '7', '6'];\r\nconst CARDS_ROW = CARD.map((c1, i1) => CARD.map((c2, i2) => {\r\n    if (c1 === c2) {\r\n        return c1 + c2;\r\n    }\r\n    if (i2 > i1) {\r\n        return c1 + c2 + 's';\r\n    }\r\n\r\n    return c2 + c1 + 'o';\r\n}));\r\n\r\n\r\ntype Props = {\r\n    selectHands: (hands: string[]) => void;\r\n    currentHands: string[];\r\n}\r\n\r\nexport const Spectre: React.FC<Props> = ({ selectHands, currentHands }) => {\r\n    const [cards, setCards] = useState<string[]>(currentHands);\r\n\r\n    const select = (hand: string) => {\r\n        if (cards.includes(hand)) {\r\n            setCards(cards.filter((card) => card !== hand));\r\n        } else {\r\n            setCards(cards.concat(hand));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"spectre\">\r\n            {\r\n                CARDS_ROW.map((row, i) => (\r\n                    <div key={i} className=\"spectre__row\">\r\n                        {row.map((hand, j) => <Hand key={j} selected={cards.includes(hand)} select={select} hand={hand} />)}\r\n                    </div>\r\n                ))\r\n            }\r\n            <button onClick={() => selectHands(cards)}>SELECT</button>\r\n        </div>\r\n    );\r\n};","const ALL_CARDS = '6789TJQKA'.split('').reduce<string[]>((acc, card) => {\r\n    ['c', 's', 'h', 'd'].forEach((suite) => {\r\n        acc.push(card + suite);\r\n    });\r\n    return acc;\r\n}, []);\r\n\r\nexport const enumerateAllBoards = (dead_cards: string[], board: string[] = []): string[][] => {\r\n    if (board.length === 5) {\r\n        return [board];\r\n    }\r\n    const available_cards = ALL_CARDS.filter((card) => !board.includes(card) && !dead_cards.includes(card));\r\n    const progress: string[][] = [board];\r\n    const result: string[][] = [];\r\n    while (available_cards.length) {\r\n        const next_card = available_cards.pop()!;\r\n        progress.forEach((cards) => {\r\n            if (cards.length === 4) {\r\n                result.push(cards.concat(next_card));\r\n            } else {\r\n                if (cards.length + available_cards.length > 3) {\r\n                    progress.push(cards.concat(next_card));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n};\r\n","const SUITES = ['c', 's', 'd', 'h'];\r\nconst OFFSUITED = SUITES.reduce<string[][]>((res, s1) => {\r\n    SUITES.forEach((s2) => {\r\n        if (s1 !== s2) {\r\n            res.push([s1, s2]);\r\n        }\r\n    });\r\n\r\n    return res;\r\n}, []);\r\n\r\nconst PAIR_SUITES = SUITES.reduce<string[][]>((res, s1, i1) => {\r\n    SUITES.forEach((s2, i2) => {\r\n        if (i1 < i2) {\r\n            res.push([s1, s2]);\r\n        }\r\n    });\r\n\r\n    return res;\r\n}, []);\r\n\r\nexport const toCombos = (hands: string[]): string[][] => {\r\n    return hands.reduce<string[][]>((res, hand) => {\r\n        const [c1, c2, suit] = hand.split('');\r\n        if (hand.length === 2) {\r\n            res.push(...PAIR_SUITES.map(([s1, s2]) => [c1 + s1, c2 + s2]));\r\n        } else if (suit === 's') {\r\n            res.push(...SUITES.map((s) => [c1 + s, c2 + s]));\r\n        } else {\r\n            res.push(...OFFSUITED.map(([s1, s2]) => [c1 + s1, c2 + s2]));\r\n        }\r\n\r\n        return res;\r\n    }, []);\r\n};\r\n","import { enumerateAllBoards } from './enumerateAllBoards';\r\nimport { compareHands } from './combination';\r\nimport { toCombos } from './combos';\r\n\r\nexport const computeEquity = (hand1: string[], hand2: string[], current_board: string[]) => {\r\n    let win = 0;\r\n    let tie = 0;\r\n    let lose = 0;\r\n    const dead_cards = [...hand1, ...hand2];\r\n    enumerateAllBoards(dead_cards, current_board).forEach((board) => {\r\n        const res = compareHands(hand1, hand2, board);\r\n        if (res === 0) {\r\n            tie++;\r\n        } else if (res === 1) {\r\n            win++;\r\n        } else {\r\n            lose++;\r\n        }\r\n    });\r\n\r\n    const total = win + tie + lose;\r\n    return { win, tie, lose, total };\r\n}\r\n\r\nexport const computeEquityVsSpectre = (hand: string[], spectre: string[], current_board: string[]) => {\r\n    let w = 0;\r\n    let l = 0;\r\n    let t = 0;\r\n\r\n    toCombos(spectre)\r\n        .filter((h) => !hand.includes(h[0]) && !hand.includes(h[1]) && !current_board.includes(h[0]) && !current_board.includes(h[1])).forEach((hand2) => {\r\n            const { win, lose, tie } = computeEquity(hand, hand2, current_board);\r\n            w += win;\r\n            l += lose;\r\n            t += tie;\r\n        });\r\n\r\n    const total = w + t + l;\r\n    return { win: w, tie: t, lose: l, total };\r\n};\r\n","import React, { useState, useRef } from 'react';\nimport { CardList } from './blocks/card_list';\nimport { Cards } from './blocks/cards';\nimport { Spectre } from './blocks/spectre';\nimport './App.css';\nimport { computeEquity, computeEquityVsSpectre } from './math/computeEquity';\n\ntype Cards = Array<string | undefined>;\n\nconst compact = <T extends any>(val: T | undefined): val is NonNullable<T> => !!val;\n\nfunction App() {\n\tconst [show_cardlist, setShowCardList] = useState(false);\n\tconst [show_p2_spectre, setShowP2Spectre] = useState(false);\n\tconst [is_p2_spectre, setIsP2Spectre] = useState(false);\n\tconst [p2_spectre, setP2Spectre] = useState<string[]>([]);\n\tconst [board, setBoard] = useState<Cards>([undefined, undefined, undefined, undefined, undefined]);\n\tconst [p1, setP1] = useState<Cards>([undefined, undefined]);\n\tconst [p2, setP2] = useState<Cards>([undefined, undefined]);\n\tconst [p1_info, setP1Info] = useState('');\n\tconst [p2_info, setP2Info] = useState('');\n\tconst current_setter = useRef(setBoard);\n\tconst current_cards = useRef(board);\n\tconst current_index = useRef(0);\n\tconst cards_lost = useRef(0);\n\n\tconst selectP1Cards = (index: number) => {\n\t\tsetShowCardList(true);\n\t\tconst new_p1 = p1.map((c, i) => i >= index ? undefined : c);\n\t\tsetP1(new_p1);\n\t\tcurrent_setter.current = setP1;\n\t\tcurrent_cards.current = new_p1;\n\t\tcards_lost.current = 2 - index;\n\t\tcurrent_index.current = index;\n\t};\n\n\tconst selectP2Cards = (index: number) => {\n\t\tsetShowCardList(true);\n\t\tconst new_p2 = p2.map((c, i) => i >= index ? undefined : c);\n\t\tsetP2(new_p2);\n\t\tcurrent_setter.current = setP2;\n\t\tcurrent_cards.current = new_p2;\n\t\tcards_lost.current = 2 - index;\n\t\tcurrent_index.current = index;\n\t};\n\n\tconst selectBoard = (index: number) => {\n\t\tsetShowCardList(true);\n\t\tconst new_board = board.map((c, i) => i >= index ? undefined : c);\n\t\tsetBoard(new_board);\n\t\tcurrent_setter.current = setBoard;\n\t\tcurrent_cards.current = new_board;\n\t\tcards_lost.current = index < 3\n\t\t\t? 3 - index\n\t\t\t: 1;\n\t\tcurrent_index.current = index;\n\t}\n\n\tconst selectCard = (card: string) => {\n\t\tcurrent_cards.current = current_cards.current.map((c, i) => i === current_index.current ? card : c);\n\t\tcurrent_index.current++;\n\t\tcurrent_setter.current(current_cards.current);\n\t\tcards_lost.current--;\n\t\tif (cards_lost.current === 0) {\n\t\t\tsetShowCardList(false);\n\t\t}\n\t};\n\n\tconst selectP2Spectre = (hands: string[]) => {\n\t\tsetP2Spectre(hands);\n\t\tsetShowP2Spectre(false);\n\t}\n\n\tconst p1_full = p1.filter(compact);\n\tconst p2_full = p2.filter(compact);\n\n\tconst compute = () => {\n\t\tif (is_p2_spectre && p2_spectre.length && p1_full.length === 2) {\n\t\t\tconst { win, tie, lose, total } = computeEquityVsSpectre(p1_full, p2_spectre, board.filter(compact));\n\t\t\tsetP1Info(String(((win / total + tie / 2 / total) * 100).toFixed(2)));\n\t\t\tsetP2Info(String(((lose / total + tie / 2 / total) * 100).toFixed(2)));\n\t\t} else {\n\t\t\tif (p1_full.length !== 2 || p2_full.length !== 2) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { win, tie, lose, total } = computeEquity(p1_full, p2_full, board.filter(compact));\n\t\t\tsetP1Info(String(((win / total + tie / 2 / total) * 100).toFixed(2)));\n\t\t\tsetP2Info(String(((lose / total + tie / 2 / total) * 100).toFixed(2)));\n\t\t}\n\t}\n\n\tconst selected = [...p1, ...p2, ...board].filter(Boolean) as string[];\n\n\treturn (\n\t\t<div className=\"calculator\">\n\t\t\tPlayer1 <span className=\"win_percent\">{p1_info}</span>\n\t\t\t<Cards className=\"player\" cards={p1} selectCard={selectP1Cards} />\n\t\t\tPlayer2 <button onClick={() => setIsP2Spectre(!is_p2_spectre)}>$$$</button> <span className=\"win_percent\">{p2_info}</span>\n\t\t\t{is_p2_spectre\n\t\t\t\t? <button className=\"show_spectre\" onClick={() => setShowP2Spectre(true)}>{p2_spectre.join(\",\") || \"SELECT SPECTRE\"}</button>\n\t\t\t\t: <Cards className=\"player\" cards={p2} selectCard={selectP2Cards} />\n\t\t\t}\n\t\t\tBOARD\n\t\t\t<Cards className=\"board\" selectCard={selectBoard} cards={board} />\n\t\t\t<button onClick={compute}>COMPUTE</button>\n\t\t\t{show_cardlist && <CardList selected={selected} selectCard={selectCard} />}\n\t\t\t{show_cardlist && <button onClick={() => setShowCardList(false)}>HIDE CARDLIST</button>}\n\t\t\t{show_p2_spectre && <Spectre currentHands={p2_spectre} selectHands={selectP2Spectre} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}